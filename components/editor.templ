package components

import (
	"fmt"
	"github.com/brocode/neoweb/nvimwrapper"
	hlattr "github.com/brocode/neoweb/nvimwrapper/hl"
)

css editor() {
	font-family: "MonaspaceNeon", monospace;
	font-size: 17px;
	background-color: var(--color-base);
	color: var(--color-text);
	padding: 10px;
	border-radius: 5px;
	width: { fmt.Sprintf("%vch", nvimwrapper.Cols) };
}

css cursorOffset(col int) {
	left: { templ.SafeCSSProperty(fmt.Sprintf("calc(%v * 1ch)", col)) };
}

css editorLine() {
	min-height: 1em;
	position: relative;
	display: flex;
}

css textSpan() {
	white-space: pre;
}

css hl(hl hlattr.HlAttr) {
	color: { hl.Color() };
	background-color: { hl.BackgroundColor() };
	font-weight: { hl.FontWeight() };
	font-style: { hl.FontStyle() };
	text-decoration: { hl.TextDecoration() };
	text-decoration-style: { hl.TextDecorationStyle() };
	text-decoration-color: { hl.TextDecorationColor() };
}

css cursor() {
	position: absolute;
	min-height: 100%;
	top: 0;
	background-color: var(--color-text);
	mix-blend-mode: difference;
	animation: blinkCursor 1.5s ease-in-out infinite;
	pointer-events: none;
}

css blockCursor() {
	width: 1ch;
}

css beamCursor() {
	width: 1px;
}

templ Editor(nvimResult nvimwrapper.NvimResult) {
	<div class={ editor() }>
		for i, line := range nvimResult.Lines {
			<div id={ fmt.Sprintf("line-%v", i) } class={ editorLine() }>
				for _, span := range line.Spans {
					<div class={ textSpan(), hl(nvimResult.Hl[span.HlId]) }>{ span.Text }</div>
				}
				if i == nvimResult.Row() {
					<div
						class={
							cursor(),
							cursorOffset(nvimResult.Col()),
							templ.KV(blockCursor(), nvimResult.Mode != "insert"),
							templ.KV(beamCursor(), nvimResult.Mode == "insert"),
						}
					></div>
				}
			</div>
		}
	</div>
}
