package components

import "github.com/brocode/neoweb/nvimwrapper"

css editorWrapper() {
	max-width: fit-content;
	margin-left: auto;
	margin-right: auto;
}

templ Main(nvimResult nvimwrapper.NvimResult) {
	@BasePage() {
		<div id="editor" class={ editorWrapper() }>
			@Editor(nvimResult)
		</div>
		<script>
    // Listen for global keypresses on the entire document
    document.addEventListener("keydown", function(event) {

        // F keys should stay in the browser. for now
        if(event.keyCode >= 112 && event.keyCode <= 123) {
            return
        }

        event.preventDefault()
        // Send the keypress information to the server
        fetch('/keypress', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                key: event.key,
                keyCode: event.keyCode,
                shiftKey: event.shiftKey,
                ctrlKey: event.ctrlKey,
                altKey: event.altKey,
                metaKey: event.metaKey
            })
        })
        .then(response => response.text())
        .then(data => console.debug('Server response:', data))
        .catch((error) => console.error('Error:', error));
    });
</script>
		<script>
        // Create a new EventSource to listen to the SSE endpoint
        const source = new EventSource('/events');

        // Listen for the 'message' event
        source.addEventListener('render', function(event) {
            // Log the event data (optional, for debugging)
            console.log(event.data);

            // Update the innerHTML of the div with id "editor"
            document.getElementById('editor').innerHTML = event.data;
        });

        // Handle any potential errors (optional)
        source.onerror = function(error) {
            console.error('Error receiving SSE:', error);
        };
    </script>
	}
}
